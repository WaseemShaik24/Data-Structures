#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

struct Node* head = NULL;

void printList() {
    struct Node* current = head;
    printf("Linked List: ");
    while (current != NULL) {
        printf("%d ", current->data);
        current = current->next;
    }
    printf("\n");
}

void insertAtBeginning(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = head;
    head = newNode;
}

void insertAtAnyPosition(int position, int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;

    if (position <= 0) {
        printf("Invalid position\n");
        return;
    }

    if (position == 1) {
        newNode->next = head;
        head = newNode;
        return;
    }

    struct Node* current = head;
    for (int i = 1; i < position - 1 && current != NULL; ++i) {
        current = current->next;
    }

    if (current == NULL) {
        printf("Position out of range\n");
        free(newNode);
        return;
    }

    newNode->next = current->next;
    current->next = newNode;
}

int main() {
    insertAtBeginning(85);
    insertAtBeginning(40);
    insertAtBeginning(25);

    insertAtAnyPosition(2, 35); // Insert 35 at position 2

    printList();

    return 0;
}
