#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node *prev;
    struct Node *next;
};

struct Node *head = NULL;

void printList() {
    struct Node *temp = head;
    printf("\n[");
    while (temp != NULL) {
        printf("%d,", temp->data);
        temp = temp->next;
    }
    printf("]\n");
}

void insertAtBeginning(int data) {
    struct Node *newNode = (struct Node *)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->prev = NULL;
    newNode->next = head;

    if (head != NULL) {
        head->prev = newNode;
    }

    head = newNode;
}

void deleteFromBeginning() {
    if (head == NULL) {
        printf("List is empty. Nothing to delete.\n");
        return;
    }

    struct Node *temp = head;
    head = head->next;

    if (head != NULL) {
        head->prev = NULL;
    }

    free(temp);
}

int main() {
    insertAtBeginning(12);
    insertAtBeginning(34);
    insertAtBeginning(58);
    insertAtBeginning(78);
    insertAtBeginning(69);

    printf("Doubly Linked list: ");
    printList();

    deleteFromBeginning();
    printf("Doubly Linked list after deletion: ");
    printList();

    return 0;
}
