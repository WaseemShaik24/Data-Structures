#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node *next;
};

struct Node *head = NULL;

void printList() {
    struct Node *temp = head;
    printf("\n[");
    while (temp != NULL) {
        printf("%d", temp->data);
        temp = temp->next;
        if (temp != NULL) {
            printf(",");
        }
    }
    printf("]");
}

void insertAtBeginning(int data) {
    struct Node *newNode = (struct Node *)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = head;
    head = newNode;
}

void deleteByKey(int key) {
    struct Node *temp = head;
    struct Node *prev = NULL;

    if (temp != NULL && temp->data == key) {
        head = temp->next;
        free(temp);
        return;
    }

    while (temp != NULL) {
        if (temp->data == key) {
            if (prev != NULL) {
                prev->next = temp->next;
            }
            free(temp);
            return;
        }
        prev = temp;
        temp = temp->next;
    }

    printf("Key not found in the list.\n");
}

int main() {
    insertAtBeginning(12);
    insertAtBeginning(22);
    insertAtBeginning(30);
    insertAtBeginning(40);
    insertAtBeginning(55);

    printf("Initial Linked List: ");
    printList();

    int keyToDelete;
    printf("\nEnter the key to delete: ");
    scanf("%d", &keyToDelete);

    deleteByKey(keyToDelete);
    printf("Doubly Linked List after deletion: ");
    printList();

    return 0;
}
