#include <stdio.h>
#include <stdbool.h>

#define MAX_SIZE 100

struct Stack {
    char data[MAX_SIZE];
    int top;
};

void initialize(struct Stack *stack) {
    stack->top = -1;
}

bool isEmpty(struct Stack *stack) {
    return stack->top == -1;
}

bool isFull(struct Stack *stack) {
    return stack->top == MAX_SIZE - 1;
}

void push(struct Stack *stack, char element) {
    stack->data[++stack->top] = element;
}

char pop(struct Stack *stack) {
    return stack->data[stack->top--];
}

bool isBalanced(char *expression) {
    struct Stack stack;
    initialize(&stack);

    for (int i = 0; expression[i] != '\0'; i++) {
        char current = expression[i];
        if (current == '(' || current == '[' || current == '{') {
            push(&stack, current);
        } else if (current == ')' || current == ']' || current == '}') {
            if (isEmpty(&stack)) {
                return false;
            }
            char top = pop(&stack);
            if ((current == ')' && top != '(') ||
                (current == ']' && top != '[') ||
                (current == '}' && top != '{')) {
                return false;
            }
        }
    }

    return isEmpty(&stack);
}

int main() {
    char expression[MAX_SIZE];

    printf("Enter an expression: ");
    fgets(expression, MAX_SIZE, stdin);

    if (isBalanced(expression)) {
        printf("Symbols are balanced\n");
    } else {
        printf("Symbols are not balanced\n");
    }

    return 0;
}
