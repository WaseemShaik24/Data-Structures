#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node *next;
};

struct Node *rear = NULL;

void enqueue(int data) {
    struct Node *newNode = (struct Node *)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;

    if (rear == NULL) {
        rear = newNode;
        rear->next = rear; // Pointing to itself as it is the only node in the queue
    } else {
        newNode->next = rear->next; // New node points to the first node
        rear->next = newNode; // Rear now points to the new node
        rear = newNode; // Update rear to the newly added node
    }
    printf("\n%d is enqueued into the Circular Queue", data);
}

void dequeue() {
    if (rear == NULL) {
        printf("\nCircular Queue is empty, cannot dequeue.");
        return;
    }

    struct Node *temp = rear->next; // Front of the queue

    if (rear == temp) {
        free(temp);
        rear = NULL;
    } else {
        rear->next = temp->next; // Rear points to the second node
        free(temp);
    }
    printf("\nElement is dequeued from the Circular Queue");
}

void display() {
    if (rear == NULL) {
        printf("\nCircular Queue is empty");
        return;
    }

    struct Node *temp = rear->next;
    printf("\nCircular Queue elements: ");
    do {
        printf("%d ", temp->data);
        temp = temp->next;
    } while (temp != rear->next);
}

int main() {
    int choice = 0;
    int data;

    while (choice != 4) {
        printf("\n\n1. Enqueue");
        printf("\n2. Dequeue");
        printf("\n3. Display");
        printf("\n4. Exit");
        printf("\nEnter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("\nEnter data to enqueue: ");
                scanf("%d", &data);
                enqueue(data);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                printf("\nExiting...\n");
                break;
            default:
                printf("\nInvalid Choice! Please enter a valid option.");
        }
    }

    return 0;
}
